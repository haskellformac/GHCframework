// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		E75BC68E1B688D15000134CF /* GHC.swift in Sources */ = {isa = PBXBuildFile; fileRef = E75BC68D1B688D15000134CF /* GHC.swift */; };
		E791CF2419F8AEC900DECDC4 /* GHC.h in Headers */ = {isa = PBXBuildFile; fileRef = E791CF2319F8AEC900DECDC4 /* GHC.h */; settings = {ATTRIBUTES = (Public, ); }; };
		E7C4FF9B1ADE9E4A00E652AA /* RelocateGHC in Copy Files */ = {isa = PBXBuildFile; fileRef = E7C4FF961ADE9B7C00E652AA /* RelocateGHC */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E7C4FF9C1ADE9E4E00E652AA /* StandardizePath in Copy Files */ = {isa = PBXBuildFile; fileRef = E7C4FF981ADE9B7C00E652AA /* StandardizePath */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		E7C4FFA31ADE9FE800E652AA /* ToolWrapper in Copy Files */ = {isa = PBXBuildFile; fileRef = E7C4FFA21ADE9E9B00E652AA /* ToolWrapper */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		E71989E41C3A059D00FE353B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E71989C41C37ADB300FE353B /* HaskellCLI.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = E71989D71C3A02E300FE353B;
			remoteInfo = CLITree;
		};
		E7AF2B101AE3BBC0009BA3C3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E7C4FFB71ADEA4C300E652AA /* GHCBuild.xcodeproj */;
			proxyType = 1;
			remoteGlobalIDString = E7E54FF5195D6CEE0019278B;
			remoteInfo = GHCBuild;
		};
		E7C4FF951ADE9B7C00E652AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E7C4FF901ADE9B7C00E652AA /* RelocateGHC.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = E72F537B19C288DB002692E6;
			remoteInfo = RelocateGHC;
		};
		E7C4FF971ADE9B7C00E652AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E7C4FF901ADE9B7C00E652AA /* RelocateGHC.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = E73120C51A1566AA00E9535A;
			remoteInfo = StandardizePath;
		};
		E7C4FFA11ADE9E9B00E652AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E7C4FF9D1ADE9E9B00E652AA /* ToolWrapper.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = E720D61719E14D7A008D8C8E;
			remoteInfo = ToolWrapper;
		};
		E7C4FFBB1ADEA4C300E652AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = E7C4FFB71ADEA4C300E652AA /* GHCBuild.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = E7E54FF6195D6CEE0019278B;
			remoteInfo = GHCBuild;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		E791CF4919F9135F00DECDC4 /* Copy Files */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = Executables;
			dstSubfolderSpec = 6;
			files = (
				E7C4FF9B1ADE9E4A00E652AA /* RelocateGHC in Copy Files */,
				E7C4FF9C1ADE9E4E00E652AA /* StandardizePath in Copy Files */,
				E7C4FFA31ADE9FE800E652AA /* ToolWrapper in Copy Files */,
			);
			name = "Copy Files";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		E71989C41C37ADB300FE353B /* HaskellCLI.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = HaskellCLI.xcodeproj; path = HaskellCLI/HaskellCLI.xcodeproj; sourceTree = "<group>"; };
		E75BC68D1B688D15000134CF /* GHC.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = GHC.swift; sourceTree = "<group>"; };
		E78F46201B5CDEA400FB6200 /* haskell-binary.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = "haskell-binary.entitlements"; sourceTree = "<group>"; };
		E791CF1E19F8AEC900DECDC4 /* GHC.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = GHC.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		E791CF2219F8AEC900DECDC4 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		E791CF2319F8AEC900DECDC4 /* GHC.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GHC.h; sourceTree = "<group>"; };
		E7C4FF901ADE9B7C00E652AA /* RelocateGHC.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = RelocateGHC.xcodeproj; sourceTree = "<group>"; };
		E7C4FF9D1ADE9E9B00E652AA /* ToolWrapper.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = ToolWrapper.xcodeproj; sourceTree = "<group>"; };
		E7C4FFB71ADEA4C300E652AA /* GHCBuild.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = GHCBuild.xcodeproj; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		E7F983871B65E6C600956431 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		E71989C51C37ADB300FE353B /* Products */ = {
			isa = PBXGroup;
			children = (
				E71989E51C3A059D00FE353B /* CLITree.bundle */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E791CF1419F8AEC900DECDC4 = {
			isa = PBXGroup;
			children = (
				E78F46201B5CDEA400FB6200 /* haskell-binary.entitlements */,
				E791CF2019F8AEC900DECDC4 /* GHC */,
				E791CF1F19F8AEC900DECDC4 /* Products */,
				E7C4FF901ADE9B7C00E652AA /* RelocateGHC.xcodeproj */,
				E7C4FF9D1ADE9E9B00E652AA /* ToolWrapper.xcodeproj */,
				E7C4FFB71ADEA4C300E652AA /* GHCBuild.xcodeproj */,
				E71989C41C37ADB300FE353B /* HaskellCLI.xcodeproj */,
			);
			sourceTree = "<group>";
		};
		E791CF1F19F8AEC900DECDC4 /* Products */ = {
			isa = PBXGroup;
			children = (
				E791CF1E19F8AEC900DECDC4 /* GHC.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E791CF2019F8AEC900DECDC4 /* GHC */ = {
			isa = PBXGroup;
			children = (
				E791CF2319F8AEC900DECDC4 /* GHC.h */,
				E791CF2119F8AEC900DECDC4 /* Supporting Files */,
				E75BC68D1B688D15000134CF /* GHC.swift */,
			);
			path = GHC;
			sourceTree = "<group>";
		};
		E791CF2119F8AEC900DECDC4 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				E791CF2219F8AEC900DECDC4 /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		E7C4FF911ADE9B7C00E652AA /* Products */ = {
			isa = PBXGroup;
			children = (
				E7C4FF961ADE9B7C00E652AA /* RelocateGHC */,
				E7C4FF981ADE9B7C00E652AA /* StandardizePath */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E7C4FF9E1ADE9E9B00E652AA /* Products */ = {
			isa = PBXGroup;
			children = (
				E7C4FFA21ADE9E9B00E652AA /* ToolWrapper */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E7C4FFB81ADEA4C300E652AA /* Products */ = {
			isa = PBXGroup;
			children = (
				E7C4FFBC1ADEA4C300E652AA /* GHCBuild.bundle */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		E791CF1B19F8AEC900DECDC4 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E791CF2419F8AEC900DECDC4 /* GHC.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		E791CF1D19F8AEC900DECDC4 /* GHC */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E791CF3419F8AEC900DECDC4 /* Build configuration list for PBXNativeTarget "GHC" */;
			buildPhases = (
				E791CF4919F9135F00DECDC4 /* Copy Files */,
				E791CF4819F8CF0800DECDC4 /* Copy GHC build */,
				E78F461F1B5CDAF000FB6200 /* Sign ghc-pkg & cpphs and Create Buildtime Executables */,
				E74DEA5E1B659DB800EACD6D /* Relocate Copied GHC Tree */,
				E7F983B61B661C6500956431 /* Sources */,
				E7F983871B65E6C600956431 /* Frameworks */,
				E791CF1B19F8AEC900DECDC4 /* Headers */,
				E78800011B15505300FB33BC /* Determine Build Number */,
			);
			buildRules = (
			);
			dependencies = (
				E7AF2B111AE3BBC0009BA3C3 /* PBXTargetDependency */,
			);
			name = GHC;
			productName = GHC;
			productReference = E791CF1E19F8AEC900DECDC4 /* GHC.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E791CF1519F8AEC900DECDC4 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 0700;
				LastSwiftUpdateCheck = 0700;
				LastUpgradeCheck = 1020;
				ORGANIZATIONNAME = "Manuel M T Chakravarty";
				TargetAttributes = {
					E791CF1D19F8AEC900DECDC4 = {
						CreatedOnToolsVersion = 6.1;
						DevelopmentTeam = CW7SX798PS;
						LastSwiftMigration = 0900;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = E791CF1819F8AEC900DECDC4 /* Build configuration list for PBXProject "GHC" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E791CF1419F8AEC900DECDC4;
			productRefGroup = E791CF1F19F8AEC900DECDC4 /* Products */;
			projectDirPath = "";
			projectReferences = (
				{
					ProductGroup = E7C4FFB81ADEA4C300E652AA /* Products */;
					ProjectRef = E7C4FFB71ADEA4C300E652AA /* GHCBuild.xcodeproj */;
				},
				{
					ProductGroup = E71989C51C37ADB300FE353B /* Products */;
					ProjectRef = E71989C41C37ADB300FE353B /* HaskellCLI.xcodeproj */;
				},
				{
					ProductGroup = E7C4FF911ADE9B7C00E652AA /* Products */;
					ProjectRef = E7C4FF901ADE9B7C00E652AA /* RelocateGHC.xcodeproj */;
				},
				{
					ProductGroup = E7C4FF9E1ADE9E9B00E652AA /* Products */;
					ProjectRef = E7C4FF9D1ADE9E9B00E652AA /* ToolWrapper.xcodeproj */;
				},
			);
			projectRoot = "";
			targets = (
				E791CF1D19F8AEC900DECDC4 /* GHC */,
			);
		};
/* End PBXProject section */

/* Begin PBXReferenceProxy section */
		E71989E51C3A059D00FE353B /* CLITree.bundle */ = {
			isa = PBXReferenceProxy;
			fileType = wrapper.cfbundle;
			path = CLITree.bundle;
			remoteRef = E71989E41C3A059D00FE353B /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		E7C4FF961ADE9B7C00E652AA /* RelocateGHC */ = {
			isa = PBXReferenceProxy;
			fileType = "compiled.mach-o.executable";
			path = RelocateGHC;
			remoteRef = E7C4FF951ADE9B7C00E652AA /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		E7C4FF981ADE9B7C00E652AA /* StandardizePath */ = {
			isa = PBXReferenceProxy;
			fileType = "compiled.mach-o.executable";
			path = StandardizePath;
			remoteRef = E7C4FF971ADE9B7C00E652AA /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		E7C4FFA21ADE9E9B00E652AA /* ToolWrapper */ = {
			isa = PBXReferenceProxy;
			fileType = "compiled.mach-o.executable";
			path = ToolWrapper;
			remoteRef = E7C4FFA11ADE9E9B00E652AA /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		E7C4FFBC1ADEA4C300E652AA /* GHCBuild.bundle */ = {
			isa = PBXReferenceProxy;
			fileType = wrapper.cfbundle;
			path = GHCBuild.bundle;
			remoteRef = E7C4FFBB1ADEA4C300E652AA /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
/* End PBXReferenceProxy section */

/* Begin PBXShellScriptBuildPhase section */
		E74DEA5E1B659DB800EACD6D /* Relocate Copied GHC Tree */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Relocate Copied GHC Tree";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Relocate the copied ghc tree from GHCBuild (now that we fixed the entitlements for build tools)\nGHCBUILD_CONFIGURATION_BUILD_DIR=`echo $CONFIGURATION_BUILD_DIR | sed s/HaskellForMac/GHCBuild/`\n\necho \"Relocating the copied GHC tree\"\n$CONFIGURATION_BUILD_DIR/$EXECUTABLE_FOLDER_PATH/Executables/RelocateGHC.buildtime\nif [ $? -ne 0 ]; then exit 1; fi\n";
			showEnvVarsInLog = 0;
		};
		E78800011B15505300FB33BC /* Determine Build Number */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Determine Build Number";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Unique build numbers calculated from Git commits http://tgoode.com/2014/06/05/sensible-way-increment-bundle-version-cfbundleversion-xcode/\n\nbranch='master'\nbuildNumber=$(expr $(git rev-list $branch --count) - $(git rev-list HEAD..$branch --count))\necho \"Updating build number to $buildNumber using branch '$branch'.\"\n/usr/libexec/PlistBuddy -c \"Set :CFBundleVersion $buildNumber\" \"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}\"\n\n# The following command checks the source corresponding to a particular build number out\n#\n#   git checkout `git rev-list master | tail -n $1 | head -n 1`\n";
			showEnvVarsInLog = 0;
		};
		E78F461F1B5CDAF000FB6200 /* Sign ghc-pkg & cpphs and Create Buildtime Executables */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Sign ghc-pkg & cpphs and Create Buildtime Executables";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "CONTENTS_PATH=$CONFIGURATION_BUILD_DIR/$CONTENTS_FOLDER_PATH\n\n# Create a signed copy of 'ghc-pkg' & 'ccphs' with entitlements, so it can be shipped in the bundle. (HfM needs 'ghc-pkg' to create the binary package cache.)\n\necho \"Creating signed copy of 'ghc-pkg' and 'cpphs'...\"\nmkdir -p ${CONTENTS_PATH}/usr/lib/ghc/signed_bin\ncp -f ${CONTENTS_PATH}/usr/lib/ghc/bin/ghc-pkg ${CONTENTS_PATH}/usr/lib/ghc/signed_bin/\nln -hfs ../usr/lib/ghc/signed_bin/ghc-pkg ${CONTENTS_PATH}/Executables/\ncp -f ${CONTENTS_PATH}/usr/lib/ghc/bin/cpphs ${CONTENTS_PATH}/usr/lib/ghc/signed_bin/\nln -hfs ../usr/lib/ghc/signed_bin/cpphs ${CONTENTS_PATH}/Executables/\n\n# FIXME: The hardcoded code signing details are not great...\nsigning_key=\"28B8455CDA64191079400126C8D5AB324346B388\"\nexport CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/codesign_allocate\n/usr/bin/codesign --force --sign ${signing_key} --entitlements $SOURCE_ROOT/haskell-binary.entitlements --requirements '=designated => anchor apple generic  and identifier \"$self.identifier\" and ((cert leaf[field.1.2.840.113635.100.6.1.9] exists) or ( certificate 1[field.1.2.840.113635.100.6.2.6] exists and certificate leaf[field.1.2.840.113635.100.6.1.13] exists  and certificate leaf[subject.OU] = \"TVG8VWU28X\" ))' ${CONTENTS_PATH}/usr/lib/ghc/signed_bin/ghc-pkg || exit 1\n/usr/bin/codesign --force --sign ${signing_key} --entitlements $SOURCE_ROOT/haskell-binary.entitlements --requirements '=designated => anchor apple generic  and identifier \"$self.identifier\" and ((cert leaf[field.1.2.840.113635.100.6.1.9] exists) or ( certificate 1[field.1.2.840.113635.100.6.2.6] exists and certificate leaf[field.1.2.840.113635.100.6.1.13] exists  and certificate leaf[subject.OU] = \"TVG8VWU28X\" ))' ${CONTENTS_PATH}/usr/lib/ghc/signed_bin/cpphs || exit 1\n\n# Copies of the two tools without sandboxing, so we can use them during builds (re-signing deletes the old entitelments by default)\n\ncp -f ${CONTENTS_PATH}/Executables/RelocateGHC ${CONTENTS_PATH}/Executables/RelocateGHC.buildtime\n/usr/bin/codesign --force --sign ${signing_key} ${CONTENTS_PATH}/Executables/RelocateGHC.buildtime || exit 1\ncp -f ${CONTENTS_PATH}/Executables/StandardizePath ${CONTENTS_PATH}/Executables/StandardizePath.buildtime\n/usr/bin/codesign --force --sign ${signing_key} ${CONTENTS_PATH}/Executables/StandardizePath.buildtime || exit 1\n\n# We need to remove the 'com.apple.security.get-task-allow' entitlement — what a mess!!!!\n\n/usr/bin/codesign --force --sign ${signing_key} --entitlements $SOURCE_ROOT/haskell-binary.entitlements --requirements '=designated => anchor apple generic  and identifier \"$self.identifier\" and ((cert leaf[field.1.2.840.113635.100.6.1.9] exists) or ( certificate 1[field.1.2.840.113635.100.6.2.6] exists and certificate leaf[field.1.2.840.113635.100.6.1.13] exists  and certificate leaf[subject.OU] = \"K46KPXLRKW\" ))' ${CONTENTS_PATH}/Executables/RelocateGHC || exit 1\n/usr/bin/codesign --force --sign ${signing_key} --entitlements $SOURCE_ROOT/haskell-binary.entitlements --requirements '=designated => anchor apple generic  and identifier \"$self.identifier\" and ((cert leaf[field.1.2.840.113635.100.6.1.9] exists) or ( certificate 1[field.1.2.840.113635.100.6.2.6] exists and certificate leaf[field.1.2.840.113635.100.6.1.13] exists  and certificate leaf[subject.OU] = \"K46KPXLRKW\" ))' ${CONTENTS_PATH}/Executables/ToolWrapper || exit 1\n/usr/bin/codesign --force --sign ${signing_key} --entitlements $SOURCE_ROOT/haskell-binary.entitlements --requirements '=designated => anchor apple generic  and identifier \"$self.identifier\" and ((cert leaf[field.1.2.840.113635.100.6.1.9] exists) or ( certificate 1[field.1.2.840.113635.100.6.2.6] exists and certificate leaf[field.1.2.840.113635.100.6.1.13] exists  and certificate leaf[subject.OU] = \"K46KPXLRKW\" ))' ${CONTENTS_PATH}/Executables/StandardizePath || exit 1\n\n";
			showEnvVarsInLog = 0;
		};
		E791CF4819F8CF0800DECDC4 /* Copy GHC build */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Copy GHC build";
			outputPaths = (
				"$(DERIVED_FILE_DIR)/HsFFI.h",
				"$(BUILT_PRODUCTS_DIR)/$(EXECUTABLE_FOLDER_PATH)/Libraries/$(TARGET_NAME).dylib",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GHCBUILD_CONFIGURATION_BUILD_DIR=`echo $CONFIGURATION_BUILD_DIR | sed s/HaskellForMac/GHCBuild/`\nGHCROOT=$GHCBUILD_CONFIGURATION_BUILD_DIR/GHCBuild.bundle/Contents\nCONTENTS_PATH=$CONFIGURATION_BUILD_DIR/$CONTENTS_FOLDER_PATH\nGHCBIN=$GHCROOT/usr/bin\nGHC_VERSION=`$GHCBIN/ghc --numeric-version`\n\necho \"GHCROOT = $GHCROOT; GHC_VERSION = $GHC_VERSION\"\n\n# Copy the GHC build\necho \"Copying GHC build (not yet relocated)\"\necho \"  FROM ${GHCROOT}/usr TO ${CONTENTS_PATH}/usr\"\nditto ${GHCROOT}/usr ${CONTENTS_PATH}/usr\n# NB: We cannot relocate yet, as we first need to fix code signatures.\n\n# This framework's public API is the Haskell C API.\n#\n# NB: We can just link them all, as the module mechanisms doesn't allow headers that are not\n#     mentioned in the umbrella header.\nditto $CONTENTS_PATH/usr/lib/ghc/include/HsFFI.h $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/\nsed -i '' -e's|stg/Types.h|Types.h|' $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/HsFFI.h\nditto $CONTENTS_PATH/usr/lib/ghc/include/ghcconfig.h $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/\nditto $CONTENTS_PATH/usr/lib/ghc/include/ghcautoconf.h $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/\nditto $CONTENTS_PATH/usr/lib/ghc/include/ghcplatform.h $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/\nditto $CONTENTS_PATH/usr/lib/ghc/include/stg/Types.h $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/\nsed -i '' -e's|#include <inttypes.h>|/* #include <inttypes.h> */|' $BUILT_PRODUCTS_DIR/$PUBLIC_HEADERS_FOLDER_PATH/Types.h\n\n# We need a Libraries/ directory in the framework to link the RTS dylib\n/bin/mkdir -p ${BUILT_PRODUCTS_DIR}/${EXECUTABLE_FOLDER_PATH}/Libraries\n/bin/ln -sfh Versions/Current/Libraries ${BUILT_PRODUCTS_DIR}/${FULL_PRODUCT_NAME}/Libraries\n\n# Select the RTS flavour to be used when linking against this framwork.\nRTS_DYLIB=libHSrts_thr-ghc${GHC_VERSION}.dylib\nln -hfs ../usr/lib/ghc/rts/$RTS_DYLIB ${BUILT_PRODUCTS_DIR}/${EXECUTABLE_FOLDER_PATH}/Libraries/\nln -hfs $RTS_DYLIB ${BUILT_PRODUCTS_DIR}/${EXECUTABLE_FOLDER_PATH}/Libraries/GHC.dylib\n\n# Remove references to Xcode embedded toolchain in GHC settings file\nsed -e 's|/Applications/Xcode.*app/Contents/Developer.*/usr|/usr|g' $CONTENTS_PATH/usr/lib/ghc/settings >$CONTENTS_PATH/usr/lib/ghc/settings.clean\nmv -f $CONTENTS_PATH/usr/lib/ghc/settings.clean $CONTENTS_PATH/usr/lib/ghc/settings\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		E7F983B61B661C6500956431 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E75BC68E1B688D15000134CF /* GHC.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		E7AF2B111AE3BBC0009BA3C3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = GHCBuild;
			targetProxy = E7AF2B101AE3BBC0009BA3C3 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		E791CF3219F8AEC900DECDC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		E791CF3319F8AEC900DECDC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		E791CF3519F8AEC900DECDC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "Mac Developer";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = CW7SX798PS;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_VERSION = A;
				INFOPLIST_FILE = GHC/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MARKETING_VERSION = "8.6.4-13.14-3";
				PRODUCT_BUNDLE_IDENTIFIER = "com.haskellformac.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SKIP_INSTALL = YES;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		E791CF3619F8AEC900DECDC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "Mac Developer";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = CW7SX798PS;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_VERSION = A;
				INFOPLIST_FILE = GHC/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MARKETING_VERSION = "8.6.4-13.14-3";
				PRODUCT_BUNDLE_IDENTIFIER = "com.haskellformac.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E791CF1819F8AEC900DECDC4 /* Build configuration list for PBXProject "GHC" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E791CF3219F8AEC900DECDC4 /* Debug */,
				E791CF3319F8AEC900DECDC4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E791CF3419F8AEC900DECDC4 /* Build configuration list for PBXNativeTarget "GHC" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E791CF3519F8AEC900DECDC4 /* Debug */,
				E791CF3619F8AEC900DECDC4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = E791CF1519F8AEC900DECDC4 /* Project object */;
}
